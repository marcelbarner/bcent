/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { webApi2FeaturesDashboardCashflowCashflowEndpoint } from '../fn/dashboard/web-api-2-features-dashboard-cashflow-cashflow-endpoint';
import { WebApi2FeaturesDashboardCashflowCashflowEndpoint$Params } from '../fn/dashboard/web-api-2-features-dashboard-cashflow-cashflow-endpoint';
import { WebApi2FeaturesDashboardCashflowCashFlowItem } from '../models/web-api-2-features-dashboard-cashflow-cash-flow-item';
import { WebApi2FeaturesDashboardHistoryDashboardHistoryItem } from '../models/web-api-2-features-dashboard-history-dashboard-history-item';
import { webApi2FeaturesDashboardHistoryTotalNetWorthHistoryTotalNetWorthEndpoint } from '../fn/dashboard/web-api-2-features-dashboard-history-total-net-worth-history-total-net-worth-endpoint';
import { WebApi2FeaturesDashboardHistoryTotalNetWorthHistoryTotalNetWorthEndpoint$Params } from '../fn/dashboard/web-api-2-features-dashboard-history-total-net-worth-history-total-net-worth-endpoint';
import { WebApi2FeaturesDashboardIncomeVsExpenseDashboardIncomeVsExpense } from '../models/web-api-2-features-dashboard-income-vs-expense-dashboard-income-vs-expense';
import { webApi2FeaturesDashboardIncomeVsExpenseIncomeVsExpenseEndpoint } from '../fn/dashboard/web-api-2-features-dashboard-income-vs-expense-income-vs-expense-endpoint';
import { WebApi2FeaturesDashboardIncomeVsExpenseIncomeVsExpenseEndpoint$Params } from '../fn/dashboard/web-api-2-features-dashboard-income-vs-expense-income-vs-expense-endpoint';
import { WebApi2FeaturesDashboardKpisDashboardKpi } from '../models/web-api-2-features-dashboard-kpis-dashboard-kpi';
import { webApi2FeaturesDashboardKpisTotalAssetsEndpoint } from '../fn/dashboard/web-api-2-features-dashboard-kpis-total-assets-endpoint';
import { WebApi2FeaturesDashboardKpisTotalAssetsEndpoint$Params } from '../fn/dashboard/web-api-2-features-dashboard-kpis-total-assets-endpoint';
import { webApi2FeaturesDashboardKpisTotalLiabilitiesEndpoint } from '../fn/dashboard/web-api-2-features-dashboard-kpis-total-liabilities-endpoint';
import { WebApi2FeaturesDashboardKpisTotalLiabilitiesEndpoint$Params } from '../fn/dashboard/web-api-2-features-dashboard-kpis-total-liabilities-endpoint';
import { webApi2FeaturesDashboardKpisTotalNetWorthEndpoint } from '../fn/dashboard/web-api-2-features-dashboard-kpis-total-net-worth-endpoint';
import { WebApi2FeaturesDashboardKpisTotalNetWorthEndpoint$Params } from '../fn/dashboard/web-api-2-features-dashboard-kpis-total-net-worth-endpoint';

@Injectable({ providedIn: 'root' })
export class DashboardService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `webApi2FeaturesDashboardCashflowCashflowEndpoint()` */
  static readonly WebApi2FeaturesDashboardCashflowCashflowEndpointPath = '/api/dashboard/cash-flow';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `webApi2FeaturesDashboardCashflowCashflowEndpoint()` instead.
   *
   * This method doesn't expect any request body.
   */
  webApi2FeaturesDashboardCashflowCashflowEndpoint$Response(params?: WebApi2FeaturesDashboardCashflowCashflowEndpoint$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<WebApi2FeaturesDashboardCashflowCashFlowItem>>> {
    return webApi2FeaturesDashboardCashflowCashflowEndpoint(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `webApi2FeaturesDashboardCashflowCashflowEndpoint$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  webApi2FeaturesDashboardCashflowCashflowEndpoint(params?: WebApi2FeaturesDashboardCashflowCashflowEndpoint$Params, context?: HttpContext): Observable<Array<WebApi2FeaturesDashboardCashflowCashFlowItem>> {
    return this.webApi2FeaturesDashboardCashflowCashflowEndpoint$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<WebApi2FeaturesDashboardCashflowCashFlowItem>>): Array<WebApi2FeaturesDashboardCashflowCashFlowItem> => r.body)
    );
  }

  /** Path part for operation `webApi2FeaturesDashboardHistoryTotalNetWorthHistoryTotalNetWorthEndpoint()` */
  static readonly WebApi2FeaturesDashboardHistoryTotalNetWorthHistoryTotalNetWorthEndpointPath = '/api/dashboard/history/total-net-worth';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `webApi2FeaturesDashboardHistoryTotalNetWorthHistoryTotalNetWorthEndpoint()` instead.
   *
   * This method doesn't expect any request body.
   */
  webApi2FeaturesDashboardHistoryTotalNetWorthHistoryTotalNetWorthEndpoint$Response(params?: WebApi2FeaturesDashboardHistoryTotalNetWorthHistoryTotalNetWorthEndpoint$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<WebApi2FeaturesDashboardHistoryDashboardHistoryItem>>> {
    return webApi2FeaturesDashboardHistoryTotalNetWorthHistoryTotalNetWorthEndpoint(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `webApi2FeaturesDashboardHistoryTotalNetWorthHistoryTotalNetWorthEndpoint$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  webApi2FeaturesDashboardHistoryTotalNetWorthHistoryTotalNetWorthEndpoint(params?: WebApi2FeaturesDashboardHistoryTotalNetWorthHistoryTotalNetWorthEndpoint$Params, context?: HttpContext): Observable<Array<WebApi2FeaturesDashboardHistoryDashboardHistoryItem>> {
    return this.webApi2FeaturesDashboardHistoryTotalNetWorthHistoryTotalNetWorthEndpoint$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<WebApi2FeaturesDashboardHistoryDashboardHistoryItem>>): Array<WebApi2FeaturesDashboardHistoryDashboardHistoryItem> => r.body)
    );
  }

  /** Path part for operation `webApi2FeaturesDashboardIncomeVsExpenseIncomeVsExpenseEndpoint()` */
  static readonly WebApi2FeaturesDashboardIncomeVsExpenseIncomeVsExpenseEndpointPath = '/api/dashboard/income-vs-expense';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `webApi2FeaturesDashboardIncomeVsExpenseIncomeVsExpenseEndpoint()` instead.
   *
   * This method doesn't expect any request body.
   */
  webApi2FeaturesDashboardIncomeVsExpenseIncomeVsExpenseEndpoint$Response(params?: WebApi2FeaturesDashboardIncomeVsExpenseIncomeVsExpenseEndpoint$Params, context?: HttpContext): Observable<StrictHttpResponse<WebApi2FeaturesDashboardIncomeVsExpenseDashboardIncomeVsExpense>> {
    return webApi2FeaturesDashboardIncomeVsExpenseIncomeVsExpenseEndpoint(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `webApi2FeaturesDashboardIncomeVsExpenseIncomeVsExpenseEndpoint$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  webApi2FeaturesDashboardIncomeVsExpenseIncomeVsExpenseEndpoint(params?: WebApi2FeaturesDashboardIncomeVsExpenseIncomeVsExpenseEndpoint$Params, context?: HttpContext): Observable<WebApi2FeaturesDashboardIncomeVsExpenseDashboardIncomeVsExpense> {
    return this.webApi2FeaturesDashboardIncomeVsExpenseIncomeVsExpenseEndpoint$Response(params, context).pipe(
      map((r: StrictHttpResponse<WebApi2FeaturesDashboardIncomeVsExpenseDashboardIncomeVsExpense>): WebApi2FeaturesDashboardIncomeVsExpenseDashboardIncomeVsExpense => r.body)
    );
  }

  /** Path part for operation `webApi2FeaturesDashboardKpisTotalAssetsEndpoint()` */
  static readonly WebApi2FeaturesDashboardKpisTotalAssetsEndpointPath = '/api/dashboard/kpis/total-assets';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `webApi2FeaturesDashboardKpisTotalAssetsEndpoint()` instead.
   *
   * This method doesn't expect any request body.
   */
  webApi2FeaturesDashboardKpisTotalAssetsEndpoint$Response(params?: WebApi2FeaturesDashboardKpisTotalAssetsEndpoint$Params, context?: HttpContext): Observable<StrictHttpResponse<WebApi2FeaturesDashboardKpisDashboardKpi>> {
    return webApi2FeaturesDashboardKpisTotalAssetsEndpoint(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `webApi2FeaturesDashboardKpisTotalAssetsEndpoint$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  webApi2FeaturesDashboardKpisTotalAssetsEndpoint(params?: WebApi2FeaturesDashboardKpisTotalAssetsEndpoint$Params, context?: HttpContext): Observable<WebApi2FeaturesDashboardKpisDashboardKpi> {
    return this.webApi2FeaturesDashboardKpisTotalAssetsEndpoint$Response(params, context).pipe(
      map((r: StrictHttpResponse<WebApi2FeaturesDashboardKpisDashboardKpi>): WebApi2FeaturesDashboardKpisDashboardKpi => r.body)
    );
  }

  /** Path part for operation `webApi2FeaturesDashboardKpisTotalLiabilitiesEndpoint()` */
  static readonly WebApi2FeaturesDashboardKpisTotalLiabilitiesEndpointPath = '/api/dashboard/kpis/total-liabilities';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `webApi2FeaturesDashboardKpisTotalLiabilitiesEndpoint()` instead.
   *
   * This method doesn't expect any request body.
   */
  webApi2FeaturesDashboardKpisTotalLiabilitiesEndpoint$Response(params?: WebApi2FeaturesDashboardKpisTotalLiabilitiesEndpoint$Params, context?: HttpContext): Observable<StrictHttpResponse<WebApi2FeaturesDashboardKpisDashboardKpi>> {
    return webApi2FeaturesDashboardKpisTotalLiabilitiesEndpoint(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `webApi2FeaturesDashboardKpisTotalLiabilitiesEndpoint$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  webApi2FeaturesDashboardKpisTotalLiabilitiesEndpoint(params?: WebApi2FeaturesDashboardKpisTotalLiabilitiesEndpoint$Params, context?: HttpContext): Observable<WebApi2FeaturesDashboardKpisDashboardKpi> {
    return this.webApi2FeaturesDashboardKpisTotalLiabilitiesEndpoint$Response(params, context).pipe(
      map((r: StrictHttpResponse<WebApi2FeaturesDashboardKpisDashboardKpi>): WebApi2FeaturesDashboardKpisDashboardKpi => r.body)
    );
  }

  /** Path part for operation `webApi2FeaturesDashboardKpisTotalNetWorthEndpoint()` */
  static readonly WebApi2FeaturesDashboardKpisTotalNetWorthEndpointPath = '/api/dashboard/kpis/total-net-worth';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `webApi2FeaturesDashboardKpisTotalNetWorthEndpoint()` instead.
   *
   * This method doesn't expect any request body.
   */
  webApi2FeaturesDashboardKpisTotalNetWorthEndpoint$Response(params?: WebApi2FeaturesDashboardKpisTotalNetWorthEndpoint$Params, context?: HttpContext): Observable<StrictHttpResponse<WebApi2FeaturesDashboardKpisDashboardKpi>> {
    return webApi2FeaturesDashboardKpisTotalNetWorthEndpoint(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `webApi2FeaturesDashboardKpisTotalNetWorthEndpoint$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  webApi2FeaturesDashboardKpisTotalNetWorthEndpoint(params?: WebApi2FeaturesDashboardKpisTotalNetWorthEndpoint$Params, context?: HttpContext): Observable<WebApi2FeaturesDashboardKpisDashboardKpi> {
    return this.webApi2FeaturesDashboardKpisTotalNetWorthEndpoint$Response(params, context).pipe(
      map((r: StrictHttpResponse<WebApi2FeaturesDashboardKpisDashboardKpi>): WebApi2FeaturesDashboardKpisDashboardKpi => r.body)
    );
  }

}
